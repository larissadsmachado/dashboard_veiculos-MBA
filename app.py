import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from utils.data_loader import load_data, get_filters

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Dashboard Vendas Autom√≥veis - Brasil",
    page_icon="üöó",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Carregar dados
df = load_data()

if df.empty:
    st.stop()

# T√≠tulo principal
st.title("üöó Dashboard de Vendas de Autom√≥veis - Brasil")
st.markdown("**An√°lise do Mercado Automotivo Brasileiro baseada em dados da ANFAVEA**")

# Sidebar com filtros
st.sidebar.header("üîç Filtros")

# Obter op√ß√µes para filtros
marcas, modelos, regioes, estados, combustiveis, anos = get_filters(df)

# Filtros
marca_selecionada = st.sidebar.multiselect("Marca", marcas, default=marcas)
modelo_selecionado = st.sidebar.multiselect("Modelo", modelos, default=modelos)
regiao_selecionada = st.sidebar.multiselect("Regi√£o", regioes, default=regioes)
estado_selecionado = st.sidebar.multiselect("Estado", estados, default=estados)
combustivel_selecionado = st.sidebar.multiselect("Combust√≠vel", combustiveis, default=combustiveis)
ano_selecionado = st.sidebar.multiselect("Ano", anos, default=anos)

# Aplicar filtros
df_filtrado = df[
    (df['marca'].isin(marca_selecionada)) &
    (df['modelo'].isin(modelo_selecionado)) &
    (df['regiao'].isin(regiao_selecionada)) &
    (df['estado'].isin(estado_selecionado)) &
    (df['combustivel'].isin(combustivel_selecionado)) &
    (df['ano'].isin(ano_selecionado))
]

# Storytelling - Introdu√ß√£o
st.markdown("""
## üìñ An√°lise do Mercado Automotivo Brasileiro

**Problem√°tica:** A ind√∫stria automotiva brasileira enfrenta desafios significativos com a flutua√ß√£o de vendas, 
mudan√ßas nas prefer√™ncias dos consumidores e varia√ß√µes regionais. Este dashboard visa identificar padr√µes de vendas, 
comportamento do mercado e oportunidades de crescimento.

**Objetivo:** Fornecer insights estrat√©gicos para tomada de decis√£o sobre investimentos, mix de produtos 
e expans√£o regional.
""")

# M√©tricas principais
st.markdown("---")
st.header("üìä M√©tricas Principais")

col1, col2, col3, col4 = st.columns(4)

with col1:
    total_vendas = df_filtrado['vendas'].sum()
    st.metric("Total de Vendas", f"{total_vendas:,.0f}".replace(",", "."))

with col2:
    faturamento_total = df_filtrado['faturamento'].sum()
    st.metric("Faturamento Total", f"R$ {faturamento_total:,.0f}".replace(",", "."))

with col3:
    preco_medio = df_filtrado['preco_medio'].mean()
    st.metric("Pre√ßo M√©dio", f"R$ {preco_medio:,.0f}".replace(",", "."))

with col4:
    modelos_unicos = df_filtrado['modelo'].nunique()
    st.metric("Modelos √önicos", modelos_unicos)

# Gr√°ficos
st.markdown("---")
st.header("üìà An√°lise de Vendas")

# Layout com duas colunas para gr√°ficos
col1, col2 = st.columns(2)

with col1:
    st.subheader("üìÖ Evolu√ß√£o Mensal de Vendas")
    
    # Agrupar por m√™s
    vendas_mensais = df_filtrado.groupby('mes_ano').agg({
        'vendas': 'sum',
        'faturamento': 'sum'
    }).reset_index()
    
    fig_vendas = px.line(
        vendas_mensais, 
        x='mes_ano', 
        y='vendas',
        title='Evolu√ß√£o das Vendas ao Longo do Tempo',
        labels={'mes_ano': 'M√™s/Ano', 'vendas': 'Quantidade de Vendas'}
    )
    fig_vendas.update_layout(height=400)
    st.plotly_chart(fig_vendas, use_container_width=True)
    
    # Explica√ß√£o do gr√°fico
    with st.expander("‚ÑπÔ∏è Por que analisar a evolu√ß√£o mensal?"):
        st.markdown("""
        **Objetivo:** Identificar sazonalidades e tend√™ncias ao longo do tempo.
        **Insights esperados:**
        - Per√≠odos de alta e baixa nas vendas
        - Efeito de campanhas promocionais
        - Impacto de fatores econ√¥micos
        - Sazonalidade do mercado automotivo
        """)

with col2:
    st.subheader("üè≠ Vendas por Marca")
    
    vendas_marca = df_filtrado.groupby('marca').agg({
        'vendas': 'sum',
        'faturamento': 'sum'
    }).reset_index().sort_values('vendas', ascending=False)
    
    fig_marca = px.bar(
        vendas_marca.head(10),
        x='marca',
        y='vendas',
        title='Top 10 Marcas por Volume de Vendas',
        color='vendas',
        color_continuous_scale='blues'
    )
    fig_marca.update_layout(height=400)
    st.plotly_chart(fig_marca, use_container_width=True)
    
    # Explica√ß√£o do gr√°fico
    with st.expander("‚ÑπÔ∏è Por que analisar vendas por marca?"):
        st.markdown("""
        **Objetivo:** Entender a participa√ß√£o de mercado das diferentes marcas.
        **Insights esperados:**
        - L√≠deres de mercado
        - Oportunidades para marcas menores
        - Estrat√©gia de posicionamento
        - Potencial para parcerias
        """)

# Segunda linha de gr√°ficos
col3, col4 = st.columns(2)

with col3:
    st.subheader("üó∫Ô∏è Distribui√ß√£o por Regi√£o")
    
    vendas_regiao = df_filtrado.groupby('regiao').agg({
        'vendas': 'sum',
        'faturamento': 'sum'
    }).reset_index()
    
    fig_regiao = px.pie(
        vendas_regiao,
        values='vendas',
        names='regiao',
        title='Distribui√ß√£o de Vendas por Regi√£o',
        hole=0.4
    )
    fig_regiao.update_layout(height=400)
    st.plotly_chart(fig_regiao, use_container_width=True)
    
    # Explica√ß√£o do gr√°fico
    with st.expander("‚ÑπÔ∏è Por que analisar a distribui√ß√£o regional?"):
        st.markdown("""
        **Objetivo:** Identificar oportunidades de expans√£o regional.
        **Insights esperados:**
        - Regi√µes com maior potencial
        - Necessidade de ajuste na distribui√ß√£o
        - Estrat√©gias regionais espec√≠ficas
        - Log√≠stica e infraestrutura necess√°ria
        """)

with col4:
    st.subheader("‚õΩ Tipo de Combust√≠vel")
    
    vendas_combustivel = df_filtrado.groupby('combustivel').agg({
        'vendas': 'sum',
        'preco_medio': 'mean'
    }).reset_index()
    
    fig_combustivel = px.bar(
        vendas_combustivel,
        x='combustivel',
        y='vendas',
        title='Vendas por Tipo de Combust√≠vel',
        color='preco_medio',
        color_continuous_scale='viridis'
    )
    fig_combustivel.update_layout(height=400)
    st.plotly_chart(fig_combustivel, use_container_width=True)
    
    # Explica√ß√£o do gr√°fico
    with st.expander("‚ÑπÔ∏è Por que analisar tipos de combust√≠vel?"):
        st.markdown("""
        **Objetivo:** Entender as prefer√™ncias dos consumidores por tipo de combust√≠vel.
        **Insights esperados:**
        - Tend√™ncias de mercado (flex, el√©tricos, etc.)
        - Pre√ßos m√©dios por categoria
        - Oportunidades para ve√≠culos sustent√°veis
        - Planejamento de mix de produtos
        """)

# An√°lise de pre√ßos
st.markdown("---")
st.header("üí∞ An√°lise de Pre√ßos e Faturamento")

col5, col6 = st.columns(2)

with col5:
    st.subheader("üìä Pre√ßo M√©dio por Marca")
    
    preco_marca = df_filtrado.groupby('marca').agg({
        'preco_medio': 'mean',
        'vendas': 'sum'
    }).reset_index().sort_values('preco_medio', ascending=False)
    
    fig_preco = px.scatter(
        preco_marca,
        x='preco_medio',
        y='vendas',
        size='vendas',
        color='marca',
        title='Rela√ß√£o entre Pre√ßo M√©dio e Volume de Vendas',
        labels={'preco_medio': 'Pre√ßo M√©dio (R$)', 'vendas': 'Volume de Vendas'}
    )
    fig_preco.update_layout(height=500)
    st.plotly_chart(fig_preco, use_container_width=True)

with col6:
    st.subheader("üèÜ Top 10 Modelos Mais Vendidos")
    
    top_modelos = df_filtrado.groupby('modelo').agg({
        'vendas': 'sum',
        'preco_medio': 'mean',
        'marca': 'first'
    }).reset_index().sort_values('vendas', ascending=False).head(10)
    
    fig_modelos = px.bar(
        top_modelos,
        x='modelo',
        y='vendas',
        color='preco_medio',
        title='Top 10 Modelos por Volume de Vendas',
        labels={'vendas': 'Total de Vendas', 'preco_medio': 'Pre√ßo M√©dio'}
    )
    fig_modelos.update_layout(height=500)
    st.plotly_chart(fig_modelos, use_container_width=True)

# Tabela detalhada
st.markdown("---")
st.header("üìã Dados Detalhados")

with st.expander("Visualizar Dados Filtrados"):
    st.dataframe(
        df_filtrado.sort_values('vendas', ascending=False),
        use_container_width=True
    )

# Conclus√µes e Insights
st.markdown("---")
st.header("üí° Principais Insights e Recomenda√ß√µes")

col7, col8 = st.columns(2)

with col7:
    st.subheader("üéØ Insights Identificados")
    st.markdown("""
    1. **Sazonalidade:** Picos de vendas em determinados meses
    2. **Lideran√ßa de Mercado:** Marcas dominantes e suas estrat√©gias
    3. **Distribui√ß√£o Regional:** Concentra√ß√£o em regi√µes espec√≠ficas
    4. **Prefer√™ncias:** Tipos de combust√≠vel mais populares
    5. **Rela√ß√£o Pre√ßo-Volume:** Como o pre√ßo afeta as vendas
    """)

with col8:
    st.subheader("üöÄ Recomenda√ß√µes Estrat√©gicas")
    st.markdown("""
    1. **Expans√£o Regional:** Investir em regi√µes subexploradas
    2. **Mix de Produtos:** Ajustar oferta baseada em prefer√™ncias
    3. **Precifica√ß√£o:** Estrat√©gias competitivas de pre√ßo
    4. **Promo√ß√µes:** Timing baseado na sazonalidade
    5. **Inova√ß√£o:** Desenvolver produtos para tend√™ncias emergentes
    """)

# Rodap√©
st.markdown("---")
st.markdown(
    "**Dashboard desenvolvido para an√°lise do mercado automotivo brasileiro** ‚Ä¢ "
    "Dados simulados baseados em padr√µes da ANFAVEA ‚Ä¢ "
    "√öltima atualiza√ß√£o: 2024"
)